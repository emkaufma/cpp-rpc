/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStubServer : public jsonrpc::AbstractServer<AbstractStubServer>
{
    public:
        AbstractStubServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<AbstractStubServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("add", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_BOOLEAN, "Title",jsonrpc::JSON_OBJECT, NULL), &AbstractStubServer::addI);
            this->bindAndAddMethod(jsonrpc::Procedure("remove", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::removeI);
            this->bindAndAddNotification(jsonrpc::Procedure("toJsonFile", jsonrpc::PARAMS_BY_POSITION, "param1",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::toJsonFileI);
            this->bindAndAddNotification(jsonrpc::Procedure("loadFromJsonFile", jsonrpc::PARAMS_BY_POSITION, "param1",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::loadFromJsonFileI);
            this->bindAndAddMethod(jsonrpc::Procedure("get", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param1",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::getI);
            this->bindAndAddMethod(jsonrpc::Procedure("getTitles", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT,  NULL), &AbstractStubServer::getTitlesI);
        }

        inline virtual void addI(const Json::Value &request, Json::Value &response)
        {
            response = this->add(request["Title"]);
        }
        inline virtual void removeI(const Json::Value &request, Json::Value &response)
        {
            response = this->remove(request[0u].asString());
        }
        inline virtual void toJsonFileI(const Json::Value &request)
        {
            this->toJsonFile(request[0u].asString());
        }
        inline virtual void loadFromJsonFileI(const Json::Value &request)
        {
            this->loadFromJsonFile(request[0u].asString());
        }
        inline virtual void getI(const Json::Value &request, Json::Value &response)
        {
            response = this->get(request[0u].asString());
        }
        inline virtual void getTitlesI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->getTitles();
        }
        virtual bool add(const Json::Value& Title) = 0;
        virtual bool remove(const std::string& param1) = 0;
        virtual void toJsonFile(const std::string& param1) = 0;
        virtual void loadFromJsonFile(const std::string& param1) = 0;
        virtual Json::Value get(const std::string& param1) = 0;
        virtual Json::Value getTitles() = 0;
};

#endif //JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
